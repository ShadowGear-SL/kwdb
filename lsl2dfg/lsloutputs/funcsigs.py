#!/usr/bin/env python

# funcsigs.py - This is a LSL2dfg.py output module that outputs all the
# function signatures in the database.
#
# (C) Copyright 2013, 2024 Sei Lisa.
# Sei Lisa is the author's username in the Second Life(R) online virtual world.
#
# This file is part of LSL2 Derived Files Generator.
#
#    LSL2 Derived Files Generator is free software: you can redistribute it
#    and/or modify it under the terms of the GNU Lesser General Public License
#    as published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    LSL2 Derived Files Generator is distributed in the hope that it will be
#    useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public License
#    along with LSL2 Derived Files Generator. If not, see
#    <http://www.gnu.org/licenses/>.
#
# Second Life is a registered trademark of Linden Research, Inc.


import sys

def output(document, defaultdescs, databaseversion, infilename, outfilename, lang, tag):

  version = "0.0.20130101000"

  if outfilename is not None:
    outf = open(outfilename, "w")
  else:
    outf = sys.stdout

  try:

    outf.write("# Generated by LSL2 Derived Files Generator. Database version: %s; output module version: %s\n"
      % (databaseversion, version))

    for element in document:
      if element["cat"] == "function":

        func = "void "
        if "type" in element:
          func = element["type"] + " "
        func = func + element["name"] + "("
        first = True
        if "params" in element:
          for param in element["params"]:
            if first:
              first = False
            else:
              func = func + ","
            func = func + param["type"]# + " " + param["name"]
        func = func + ")\n"

        outf.write(func)

  finally:
    if outfilename is not None:
      outf.close()

pass
